// ==UserScript==
// @name         Narrow One Color Customizer 
// @namespace    http://tampermonkey.net/
// @version      1.2
// @description  Press "/" to use the UI color customizer
// @author       RDG KING
// @match        https://narrow.one/
// @grant        GM_addStyle
// ==/UserScript==

(function() {
    'use strict';

    // Liste de tous les s√©lecteurs √† modifier
    const selectors = [
        '.dialog-button',
        '.itemsTable',
        'input.dialog-text-input.blueNight.wrinkledPaper.join-squad-input',
        '.dialog-select-input',
        '.shop-skin-preview-canvas',
        '.main-menu-button',
        'button.main-menu-corner-profile',
        '.menu-buttons-container',
        '.ownedCoinsContainer',
        '.shopItem',
        '.chat-container',
        '.dialog-text-input',
        '.whiteBigText a',
        '.health-ui-container',
        '.health-ui-heart',
        '.shop-skin-selection-list',
        '.join-squad-input',
        '.coin-count-text',
        '.settings-group-header',
        '.playersListTeam.wrinkledPaper',
        '.playersListContainer thead',
        '.chat-log-container',
        '.elimination-score-container',
        '.map-item-thumb',
        '.corner-stats-container',
        '.dialog-checkbox-input',
        '.dialog-toggle-input',
        '.dialog',
        '.profile-stat',
        '.linked-accounts > div',
        '.main-menu-corner-profileprofile:hover',
        '.weaponSelectionDialog',
        '.squad-players-list',
        '.dialog-select-wrapper',
        'input.dialog-range-input[type="range"]',
        '.dialog-color-input',
        'input.dialog-range-input[type="range"]',
        'input.dialog-range-input[type="range"]::-webkit-slider-thumb',
        '.dialog-checkbox-input',
        '.dialog-checkbox-input:checked::before',
        'input::placeholder',
        '.elimination-score-container',
        '.flag-score-item:nth-of-type(2) .flag-score-point-el.returned .center-dot:nth-of-type(3)',
        '.flag-score-item:nth-of-type(1) .flag-score-point-el.returned .center-dot:nth-of-type(3)',
        '.profile-stat',
        '.linked-accounts > div',
        '.main-menu-corner-profileprofile:hover',

    ];

    // Valeurs par d√©faut
    let bgColor = localStorage.getItem('narrowOneBgColor') || '#1a1a1a';
    let textColor = localStorage.getItem('narrowOneTextColor') || '#f1f1f1';
    let glowColor = localStorage.getItem('narrowOneGlowColor') || '#00ffd9';
    let borderRadius = localStorage.getItem('narrowOneBorderRadius') || '25px';

    // Ajoute dynamiquement les styles CSS
    function applyStyles() {
        let styleStr = '';
        selectors.forEach(sel => {
            styleStr += `
                ${sel} {
                    background: ${bgColor} !important;
                    color: ${textColor} !important;
                    box-shadow: 0 0 10px 2px ${glowColor}77 !important;
                    text-shadow: 0 0 5px ${glowColor}88 !important;
                    border-color: ${glowColor} !important;
                    border-radius: ${borderRadius} !important;
                }
            `;
        });
        // Ajustements sp√©ciaux
        styleStr += `
            input::placeholder { color: ${textColor}aa !important; }
            .dialog-checkbox-input { border-radius: ${parseInt(borderRadius) / 2 || 12}px !important; }
        `;
        // Injection du style
        if (document.getElementById('narrowone-custom-style')) {
            document.getElementById('narrowone-custom-style').innerHTML = styleStr;
        } else {
            const style = document.createElement('style');
            style.id = 'narrowone-custom-style';
            style.innerHTML = styleStr;
            document.head.appendChild(style);
        }
    }

    // Show hint message
    function showHintMessage() {
        const hint = document.createElement('div');
        hint.id = 'narrowone-hint-message';
        hint.style = `
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: rgba(0,0,0,0.7);
            color: #fff;
            padding: 10px 15px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            z-index: 9999;
            animation: fadeIn 0.5s ease-in-out;
        `;
        hint.textContent = 'Press "/" to enable the customizer';
        document.body.appendChild(hint);

        // Remove after 5 seconds
        setTimeout(() => {
            hint.style.animation = 'fadeOut 0.5s ease-in-out';
            setTimeout(() => hint.remove(), 500);
        }, 5000);

        // Add animation styles
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(10px); }
                to { opacity: 1; transform: translateY(0); }
            }
            @keyframes fadeOut {
                from { opacity: 1; transform: translateY(0); }
                to { opacity: 0; transform: translateY(10px); }
            }
        `;
        document.head.appendChild(style);
    }

    // Menu de configuration
    function showConfigMenu() {
        if (document.getElementById('narrowone-color-menu')) return; // d√©j√† ouvert

        // Remove hint if it exists
        const existingHint = document.getElementById('narrowone-hint-message');
        if (existingHint) existingHint.remove();

        // Overlay
        const overlay = document.createElement('div');
        overlay.id = 'narrowone-color-menu';
        overlay.style = `
            position: fixed; top:0; left:0; width:100vw; height:100vh;
            background: rgba(0,0,0,0.7); z-index:99999; display:flex; align-items:center; justify-content:center;
        `;

        // Fen√™tre
        const window = document.createElement('div');
        window.style = `
            background: #222; padding: 32px 24px; border-radius: 18px; box-shadow: 0 0 14px 4px ${glowColor}88;
            display: flex; flex-direction: column; gap: 18px; min-width: 320px; max-width:90vw;
        `;
        window.innerHTML = `
            <h2 style="color:${glowColor};margin:0 0 18px 0">üé® Narrow One Color Customization</h2>
            <label>
                <span style="color:${textColor};margin-right:8px">Background:</span>
                <input type="color" id="narrowone-bgcolor" value="${bgColor}">
            </label>
            <label>
                <span style="color:${textColor};margin-right:8px">Text:</span>
                <input type="color" id="narrowone-textcolor" value="${textColor}">
            </label>
            <label>
                <span style="color:${textColor};margin-right:8px">Glow:</span>
                <input type="color" id="narrowone-glowcolor" value="${glowColor}">
            </label>
            <label>
                <span style="color:${textColor};margin-right:8px">Border Radius:</span>
                <input type="range" id="narrowone-borderradius" min="0" max="50" value="${parseInt(borderRadius)}">
                <span id="narrowone-borderradius-value" style="color:${glowColor}">${borderRadius}</span>
            </label>
            <div style="margin-top:12px;">
                <button id="narrowone-save" style="margin-right:12px;background:${glowColor};color:#222;font-weight:bold;padding:8px 16px;border:none;border-radius:8px;cursor:pointer">Save</button>
                <button id="narrowone-cancel" style="background:#444;color:#fff;padding:8px 16px;border:none;border-radius:8px;cursor:pointer">Cancel</button>
            </div>
        `;

        overlay.appendChild(window);
        document.body.appendChild(overlay);

        // Update border radius value display
        const radiusSlider = document.getElementById('narrowone-borderradius');
        const radiusValue = document.getElementById('narrowone-borderradius-value');
        radiusSlider.addEventListener('input', () => {
            radiusValue.textContent = `${radiusSlider.value}px`;
        });

        // Fermeture
        document.getElementById('narrowone-cancel').onclick = () => {
            overlay.remove();
        };

        // Sauvegarde
        document.getElementById('narrowone-save').onclick = () => {
            bgColor = document.getElementById('narrowone-bgcolor').value;
            textColor = document.getElementById('narrowone-textcolor').value;
            glowColor = document.getElementById('narrowone-glowcolor').value;
            borderRadius = `${document.getElementById('narrowone-borderradius').value}px`;
            localStorage.setItem('narrowOneBgColor', bgColor);
            localStorage.setItem('narrowOneTextColor', textColor);
            localStorage.setItem('narrowOneGlowColor', glowColor);
            localStorage.setItem('narrowOneBorderRadius', borderRadius);
            applyStyles();
            overlay.remove();
        };

        // Fermer avec Escape
        overlay.addEventListener('keydown', function(ev){
            if(ev.key === "Escape") overlay.remove();
        });
        window.querySelector('input').focus();
    }

    // Ouvre le menu avec "/"
    document.addEventListener('keydown', function(ev) {
        if (ev.key === '/' && !ev.repeat && !document.activeElement.matches('input,textarea,[contenteditable="true"]')) {
            ev.preventDefault();
            showConfigMenu();
        }
    });

    // Application initiale
    applyStyles();
    showHintMessage();

    // R√©applique au cas o√π la page r√©agit dynamiquement (ex: SPA)
    setInterval(applyStyles, 2000);
})();
